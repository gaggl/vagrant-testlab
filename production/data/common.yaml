---
classes:
  - roles::scheduler
profiles::bootstrap::firewall: true
profiles::bootstrap::firewall::purge: false
profiles::bootstrap::repos: true
profiles::bootstrap::repositories::hashicorp: true
profiles::bootstrap::resolv: true
profiles::bootstrap::resolv::name_servers:
  - 192.168.56.40
  - 10.0.2.3
profiles::monitoring::grafana_agent: true
profiles::monitoring::grafana_agent::tempo_config_hash:
  integrations:
    node_exporter:
      enabled: true
  logs:
    positions_directory: /tmp/grafana-agent/positions
    configs:
      - name: '%{::hostname}'
        positions:
          filename: /tmp/positions.yaml
        clients:
        - url: http://loki.gaggl.vagrant/loki/api/v1/push
        scrape_configs:
        - job_name: system
          pipeline_stages:
          - docker:
          static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              host: '%{::hostname}'
              __path__: /var/log/*.log
  metrics:
    wal_directory: /tmp/grafana-agent/wal
    global:
      scrape_interval: 15s
      remote_write:
        - url: http://mimir.gaggl.vagrant/api/v1/push
    configs:
      - name: '%{::hostname}'
        scrape_configs:
          - job_name: agent
            static_configs:
              - targets: ["127.0.0.1:9090"]
  traces:
    configs:
      - name: '%{::hostname}'
        batch:
          timeout: 5s
          send_batch_size: 100
        receivers:
          zipkin:
        remote_write:
          - endpoint: tempo.gaggl.vagrant
            insecure: true
        service_graphs:
          enabled: true
profiles::orchestration::consul: true
profiles::orchestration::consul::config:
  client_addr: '0.0.0.0'
  retry_join:
    - consul.gaggl.vagrant
profiles::orchestration::consul::config_defaults:
  advertise_addr: '%{::ipaddress_eth1}'
  data_dir: /opt/consul
  datacenter: lab
  connect:
    enabled: true
  enable_central_service_config: true
  telemetry:
    prometheus_retention_time: "30s"
    disable_hostname: true
profiles::orchestration::consul::connect: true
profiles::orchestration::consul::install_method: package
profiles::orchestration::consul::options: '-bind=%{::ipaddress_eth1} -enable-script-checks -syslog'
profiles::orchestration::consul::sd_service_endpoint: 'http://%{::ipaddress_eth1}:8500'
profiles::runtime::docker: true
profiles::scheduling::nomad: true
profiles::scheduling::nomad::config:
  client:
    enabled: true
    options:
      "driver.whitelist": 'docker'
    network_interface: eth1
profiles::scheduling::nomad::config_defaults:
  advertise:
    http: '%{::ipaddress_eth1}:4646'
    rpc: '%{::ipaddress_eth1}:4647'
    serf: '%{::ipaddress_eth1}:4648'
  consul:
    address: '127.0.0.1:8500'
    client_service_name: 'nomad-client-lab'
    server_service_name: 'nomad-server-lab'
  data_dir: /var/lib/nomad
  telemetry:
    collection_interval: '1s'
    disable_hostname: true
    prometheus_metrics: true
    publish_allocation_metrics: true
    publish_node_metrics: true
  vault:
    enabled: true
    address: 'http://active.vault.service.consul:8200'
    tls_skip_verify: true
profiles::scheduling::nomad::consul_connect: true
profiles::scheduling::nomad::install_method: package
profiles::scheduling::nomad::sd_service_endpoint: 'http://%{::ipaddress_eth1}:4646'
profiles::security::vault::install_method: repo
profiles::security::vault::sd_service_endpoint: 'http://%{::ipaddress_eth1}:8200'
